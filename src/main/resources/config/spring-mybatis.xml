<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
     	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	
	<!-- 加入事务，Controller在springmvc中扫描 -->
	<context:component-scan base-package="com.wpc">  
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
	</context:component-scan>
	
    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 配置mybatis相关设置，可以省略，有默认 -->
        <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
        <!--dao接口对应的Mapper的xml文件位置，如果xml和dao路径相同该配置项可以省略 -->
		<property name="mapperLocations" value="classpath*:mapper/**/*.xml" />
    </bean>

    <!-- scan for mappers and let them be autowired-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wpc.**.dao" />
    </bean> 
    
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 5. 使用声明式事务  
         transaction-manager：引用上面定义的事务管理器  
     -->  
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
    
	<tx:advice id="txAdvice" transaction-manager="transactionManager1">
	    <tx:attributes>  
			<tx:method name="find*" read-only="true"/>
			<tx:method name="load*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="*" rollback-for="CustomException"/>  
	    </tx:attributes>  
	</tx:advice> 
	<aop:config>
		<aop:pointcut id="wpcServiceMethods" expression="execution(* com.wpc..service.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="wpcServiceMethods" order="2"/>
	</aop:config>  

</beans>
